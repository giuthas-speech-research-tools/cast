##
## Copyright (c) 2022-2024 Pertti Palo.
##
## This file is part of Computer Assisted Segmentation Tools 
## (see https://github.com/giuthas-speech-research-tools/cast/).
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program. If not, see <http://www.gnu.org/licenses/>.
##
## The example data packaged with this program is licensed under the
## Creative Commons Attribution-NonCommercial-ShareAlike 4.0
## International (CC BY-NC-SA 4.0) License. You should have received a
## copy of the Creative Commons Attribution-NonCommercial-ShareAlike 4.0
## International (CC BY-NC-SA 4.0) License along with the data. If not,
## see <https://creativecommons.org/licenses/by-nc-sa/4.0/> for details.
##
## When using the toolkit for scientific publications, please cite the
## articles listed in README.markdown. They can also be found in
## citations.bib in BibTeX format.
##

# This tells CAST which metadata importer to use.
data_source: AAA

# Speaker id is used in the output csv file.
speaker_id: P1

flags:
  detect_beep: True # Should onset beep detection be run?
  test: True # Run on only the first 10 recordings.

tiers:
  - utterance:
  - word:
  - phoneme:
  - phone:
    - label: "phonetic detail"

# Strict YAML file specifying recordings to be excluded based
# on both prompts and file names.
exclusion_list: cast_exclusion.yaml
# Consists of words followed by their segments in arbitrary transcription.  
pronunciation_dictionary:

# Start and end points of the guess where the word or speech might 
# be in normalised time. If beep detection is used the normalised
# period runs from end of beep to end of recording.
utterance_guess:
  begin: 0.0833
  end: 0.6667
